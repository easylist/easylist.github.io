Conflict of interest
====================

Let's describe the conflict of interest present in Easylist and AdblockPlus / Eyeo.

- The majority of AdblockPlus "Acceptable Ads" commits are done by Easylist Author MonztA
  - https://hg.adblockplus.org/exceptionrules/shortlog
- When "Acceptable Ads" are approved by Eyeo, MonztA executes
  - https://adblockplus.org/forum/viewtopic.php?p=147274#p147274
  - https://hg.adblockplus.org/exceptionrules/rev/a29689f3ae42

How is it possible for AdblockPlus / Eyeo to maintain a degree of separation between Easylist
when MonztA, one of the primary authors, also manages the Acceptable Ads program?

What would stop MonztA from breaking sites in pursuit of those sites signing on for Acceptable
Ads @ 30% of revenue loss to the targeted site?

How many sites have been victimized by MonztA, Eyeo, AdblockPlus and Easylist?

How much money does Eyeo pay MonztA to maintain both Easylist and Acceptable Ads?

Why do the Easylist maintainers have access to the Adblock Plus reporting system?

Eyeo maintains that they are independent of Easylist, and vice-versa.  However, Eyeo provides
infrastructure for Easylist:

Reporting system:
https://forums.lanik.us/viewtopic.php?f=62&t=29584&p=91007#p91007

Source control:
https://hg.adblockplus.org/

CDN / Distribution:
https://easylist-downloads.adblockplus.org/

This is a far cry from independent.

Why did Eyeo shut down their Easylist forum? 

https://adblockplus.org/forum/viewtopic.php?f=2&t=44747

What is there to hide, besides the obvious collusion?

Pelican / GitHub Project Pages Test
===================================

This repository hosts the source files for the https://easylist.github.io/
online content, which is generated using the `Pelican <http://getpelican.com/>`_
software, and hosted at `GitHub <https://github.com/>`_.


Synopsis
--------

Some command line interface (CLI) examples useful for generating and reviewing
content from the source files::

    # Generate static content from source files, short version
    pelican

    # Generate static content, verbose version with explicit defaults
    pelican -s pelicanconf.py -o output content

    # Serve the output content at http://localhost:8000/
    cd output
    python -m pelican.server


Overview
--------

Below please find an index of the most significant files and paths in this
repository, including a brief explanation of their respective purpose:

``content/``
    The ``content`` directory hosts the source files for both articles (all
    ``content/*.rst`` files) and additional pages (``content/pages/*.rst``).

``output/``
    Files generated by Pelican are placed in the ``output`` directory by
    default. Note that this directory is not tracked, but generated on-demand.

``pelicanconf.py``
    General configuration settings for the Pelican software. Please refer to
    http://docs.getpelican.com/en/latest/settings.html for more an introduction
    into the available options and additional usage notes.

``.publishconf.py``
    Extended configuration used when publishing the online content, see
    http://docs.getpelican.com/en/latest/publish.html for more information.

``.gitignore``
    Obligatoric list of files to exclude from tracking and versioning. Details
    are explained in the Git documentation at http://git-scm.com/docs/gitignore.


